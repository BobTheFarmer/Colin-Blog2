{
  
    
        "post0": {
            "title": "Outline for Creative Performance Task Project",
            "content": "Scrum Board . To-Do In Progress Finished . Figure out how to use an image URL as an input and to return an image | Make a working draft of the more promising ideas | Brainstorm a list of ideas | . Add more ideas to the list | | | . What happens when there is a &#39;donut&#39; | | . Potential Ideas . Use an algorithm to remove a mono-color background from an image, making it a PNG | . Start of design . Input a URL of an image | Program takes the image and compiles it into a 3D array of pixels, with RGB values | Find the background by seeing what single pixel/very similar pixels are near the edge | TBD: Edge cases like donuts | Return an image | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week4/2022/09/23/2022-09-11-Outline-for-Create-Performance-Task-Project.html",
            "relUrl": "/week4/2022/09/23/2022-09-11-Outline-for-Create-Performance-Task-Project.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Sorting Algorithm Using JavaScript",
            "content": "Main Page | Sorting Algorithm Demo | JavaScript Table | . . sorted = false; //Make a random set of 15 ints values = []; for(let i = 0; i&lt;10; i++) { values[i] = Math.floor(Math.random()*6); } //Put the set into a holder function ValuesHolder(values) { this.values = values; } valuesHolder = new ValuesHolder(values); //Displays the values function getDisplayValues() { stringOfValues = &quot;&quot;; //Count down from ten for(let i = 5; i &gt;= 0; i--) { //For every value in values check if it is equal to or more than current i to determine box color values.forEach(value =&gt; { if(value&gt;=i) { stringOfValues+=&quot;🟦&quot; } else { stringOfValues+=&quot;⬛&quot; } }); stringOfValues+=&quot; n&quot; } return(stringOfValues); } step = 0; console.log(&quot;Lets sort this random array using bubble sort!&quot;); while(sorted == false) { //Update log console.log(&quot;Step &quot; + step + &quot;: n&quot; + getDisplayValues()); step+=1; //See if the list is sorted using fail fail = false; //Go through all pairs in values for(let i = 0; i&lt;10; i++) { if(values[i]&lt;values[i+1]) { fail = true; //If fail, switch them var temp = values[i]; values[i] = values[i+1]; values[i+1] = temp; } } //Determine if done or not if(fail == false) { console.log(&quot;The array has been sorted! :)&quot;) sorted = true; } } . Lets sort this random array using bubble sort! Step 0: ⬛⬛⬛⬛🟦⬛⬛⬛⬛🟦 ⬛⬛⬛⬛🟦🟦⬛⬛⬛🟦 ⬛🟦⬛⬛🟦🟦⬛⬛🟦🟦 ⬛🟦⬛⬛🟦🟦🟦⬛🟦🟦 ⬛🟦⬛⬛🟦🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 1: ⬛⬛⬛🟦⬛⬛⬛⬛🟦⬛ ⬛⬛⬛🟦🟦⬛⬛⬛🟦⬛ 🟦⬛⬛🟦🟦⬛⬛🟦🟦⬛ 🟦⬛⬛🟦🟦🟦⬛🟦🟦⬛ 🟦⬛⬛🟦🟦🟦🟦🟦🟦⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 2: ⬛⬛🟦⬛⬛⬛⬛🟦⬛⬛ ⬛⬛🟦🟦⬛⬛⬛🟦⬛⬛ 🟦⬛🟦🟦⬛⬛🟦🟦⬛⬛ 🟦⬛🟦🟦🟦⬛🟦🟦⬛⬛ 🟦⬛🟦🟦🟦🟦🟦🟦⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 3: ⬛🟦⬛⬛⬛⬛🟦⬛⬛⬛ ⬛🟦🟦⬛⬛⬛🟦⬛⬛⬛ 🟦🟦🟦⬛⬛🟦🟦⬛⬛⬛ 🟦🟦🟦🟦⬛🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 4: 🟦⬛⬛⬛⬛🟦⬛⬛⬛⬛ 🟦🟦⬛⬛⬛🟦⬛⬛⬛⬛ 🟦🟦🟦⬛🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 5: 🟦⬛⬛⬛🟦⬛⬛⬛⬛⬛ 🟦🟦⬛⬛🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 6: 🟦⬛⬛🟦⬛⬛⬛⬛⬛⬛ 🟦🟦⬛🟦⬛⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 7: 🟦⬛🟦⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 8: 🟦🟦⬛⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 The array has been sorted! :) . true .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/sortingAlgorithm",
            "relUrl": "/sortingAlgorithm",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Using javascript and HTML format for tables",
            "content": "Main Page | Sorting Algorithm Demo | JavaScript Table | . . //Define data function Data(name, github, fastpages) { this.name = name; this.git = github; this.fastpages = fastpages; } Data.prototype.setRole = function(role) { this.role = role; } Data.prototype.toJSON = function() { const obj = {name: this.name, github: this.github, fastpages: this.fastpages}; const json = JSON.stringify(obj); return json; } //Make new data and put in a list var colin = new Data(&quot;Colin&quot;, &quot;https://github.com/BobTheFarmer/Colin-Blog2&quot;, &quot;https://bobthefarmer.github.io/Colin-Blog2/&quot;); var orlando = new Data(&quot;Orlando&quot;, &quot;https://github.com/Orlando-c&quot;, &quot;https://orlando-c.github.io/que-pro/&quot;); var ethan = new Data(&quot;Ethan&quot;, &quot;https://github.com/dolphinalt/APCSP-Fastpages&quot;, &quot;https://github.com/dolphinalt/APCSP-Fastpages&quot;) var jaden = new Data(&quot;Jaden&quot;, &quot;https://raisinbran25.github.io/csp2/&quot;, &quot;https://github.com/raisinbran25/csp2&quot;) allData = [colin, orlando, ethan]; //Make a object to hold the data function DataHolder(allData) { this.allData = allData; this.allData.forEach(data =&gt; { this.allData.push(data); }); this.json = []; this.allData.forEach(data =&gt; this.json.push(data.toJSON())); } //Use object to hold data dataHolder = new DataHolder(allData); //HTML conversion method DataHolder.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); var table = &quot;&quot;; table += &quot;&lt;tr&gt;&quot;; table += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; table += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; table += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Fastpages&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; table += &quot;&lt;/tr&gt;&quot;; //Go through all data and each data&#39;s properties in a table format for (var row of allData) { table += &quot;&lt;tr&gt;&quot;; table += &quot;&lt;td&gt;&quot; + row.name; table += &quot;&lt;td&gt;&quot; + row.name + &quot;&#39;s Github: &quot; + row.git + &quot;&lt;/td&gt;&quot;; table += &quot;&lt;td&gt;&quot; + row.name + &quot;&#39;s Fastpages: &quot; + row.fastpages + &quot;&lt;/td&gt;&quot;; table += &quot;&lt;tr&gt;&quot; + &quot;&lt;/td&gt;&quot;; } //Return table return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + table + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(dataHolder._toHtml()); . NameGitHubFastpages . ColinColin&#39;s Github: https://github.com/BobTheFarmer/Colin-Blog2 | Colin&#39;s Fastpages: https://bobthefarmer.github.io/Colin-Blog2/ | &lt;/td&gt;OrlandoOrlando&#39;s Github: https://github.com/Orlando-c | Orlando&#39;s Fastpages: https://orlando-c.github.io/que-pro/ | &lt;/td&gt;EthanEthan&#39;s Github: https://github.com/dolphinalt/APCSP-Fastpages | Ethan&#39;s Fastpages: https://github.com/dolphinalt/APCSP-Fastpages | &lt;/td&gt;ColinColin&#39;s Github: https://github.com/BobTheFarmer/Colin-Blog2 | Colin&#39;s Fastpages: https://bobthefarmer.github.io/Colin-Blog2/ | &lt;/td&gt;OrlandoOrlando&#39;s Github: https://github.com/Orlando-c | Orlando&#39;s Fastpages: https://orlando-c.github.io/que-pro/ | &lt;/td&gt;EthanEthan&#39;s Github: https://github.com/dolphinalt/APCSP-Fastpages | Ethan&#39;s Fastpages: https://github.com/dolphinalt/APCSP-Fastpages | &lt;/td&gt;&lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . | . | . | . | . | . | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/javascriptTables",
            "relUrl": "/javascriptTables",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Using javascript and HTML format to make a sorting algorithm",
            "content": "Main Page | Sorting Algorithm Demo | JavaScript Table | . .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/javascript1",
            "relUrl": "/javascript1",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Week5 Summary",
            "content": "Key Idea How I used it . Program Purpose and Function | To be able to locally host our fastpages and group project; improving the speed we can work at | . Data Abstraction | N/A | i | . Managing Complexity | I went back to the week 1 instructions in order to better understand the instillation process | . Procedural Abstraction | N/A | . Algorithm Implementation | Outside algorithms where used in the command log to download things | . Testing | Trial and error | . Mental Health . This week we also learned about the importance of keeping time for things like social connections, gratitude, helping others; and making time for these things and other stress relievers .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week5/ipynb/2022/09/19/Week5-Summary.html",
            "relUrl": "/week5/ipynb/2022/09/19/Week5-Summary.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Week 4 Outline",
            "content": "",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week4/ipynb/outline/2022/09/19/Week4-Outline.html",
            "relUrl": "/week4/ipynb/outline/2022/09/19/Week4-Outline.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Video and Gratitude",
            "content": "Video Vocabulary/Notes/Big Ideas . Circumstances of life don&#39;t matter as much as we think | Our happiness is not bound by our circumstances | Taking control of our life is hard | Important things to make time for: | Social connections | Gratitude | Helping others | These things are very important and matter a lot | We need to take time to live in the present | In order to do that we have to become &#39;wealthy&#39; with time | . Note of Gratitude . I am very grateful for my parents. They have always been very loving and supported me for longer than I can remember. They have always provided for me and I am very grateful for that. . Gratitude List . Here is some of the things I am grateful . My parents | We live in a safe place where I can not worry about food or safety | I am able to go to a very good school | I have a secure future because of all of these things | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week5/ipynb/2022/09/13/Video-Notes.html",
            "relUrl": "/week5/ipynb/2022/09/13/Video-Notes.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Video Notes",
            "content": "",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week4/ipynb/notes/2022/09/12/Video-Notes.html",
            "relUrl": "/week4/ipynb/notes/2022/09/12/Video-Notes.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Minecraft Quiz Using Applab!",
            "content": "Plan: . My plan for this project is to: . 1: Make a basic draft in applab to get an idea for how it works | 2: Then use this blog to blueprint a more advanced and streamlined version of original | 3: Combine the blueprint and parts of the original code to make the final project | . Drafting: . For my draft, I used a basic repeating code structure over and over again to create a basic quiz . . Blueprinting: . To plan my final quiz, I wanted to see what was good and bad about my draft: . Pros Cons . Easy to code | Confusing code; so it would be hard to add more features to | . N/A | Not unique | . To keep the simple code but make it less confusing, for the final product I will add a function that does the repeating code for me | To make the quiz more unique, I will add a game to the end: You will have to click on diamonds as they fall, and the points you get on the quiz will determine how many you can let fall during the game before losing | . Design, Successes, Discoveries and Challenges . Key Idea How I used it . Program Purpose and Function | The purpose and function of my program is to present the user with a quiz they enjoy | . Data Abstraction | One example of data abstraction in my quiz is all of the separate score labels on each page all using the same int variable to control them | . Managing Complexity | I used comments and methods to organize my code in a clear and concise way | . Procedural Abstraction | I added a lot of methods with inputs for they could be used in similar but slightly different ways, like my checkGuess(guess, answer, levelToGoTo) method uses the parameters to be able to check different questions and go to a different page every time | . Algorithm Implementation | Algorithms are used in my program to check multiple questions and to manage multiple button objects representing diamonds | . Testing | I used various console.log statements to be able to find problems | . The Final Product . The final product can be viewed with this link, and the code is below . var score = 0; function checkGuess(guess, answer, levelToGoTo) { //Is the guess correct? Award points and provide feedback accordingly if (guess == answer) { playSpeech((&quot;Correct! You guessed &quot; + guess + &quot;; and that&#39;s the right answser. You are now on level&quot; + levelToGoTo), &quot;female&quot;, &quot;English&quot;); updateAllScores(); } else { playSpeech(((&quot;Incorrect. You guessed &quot; + guess) + &quot;; but the anwser was&quot; + answer + &quot;. You are now on level&quot; + levelToGoTo), &quot;female&quot;, &quot;English&quot;); } } function updateAllScores() { //Update scores; not all are needed ex: start screen as no points could have been awarded score = score + 10; setText(&quot;score3&quot;, &quot;Score: &quot; + score); setText(&quot;score4&quot;, &quot;Score: &quot; + score); setText(&quot;score5&quot;, &quot;Lives: &quot; + score); } //When the start button is clicked, start the game onEvent(&quot;startButton&quot;, &quot;click&quot;, function( ) { playSpeech(&quot;Enjoy this minecraft quiz! Level 1.&quot;, &quot;female&quot;, &quot;English&quot;); setScreen(&quot;Question1&quot;); }); //Questions, using the meathod above: //Question 1 onEvent(&quot;cake&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the second one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); onEvent(&quot;fake1&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the first one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); onEvent(&quot;fake2&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the third one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); onEvent(&quot;fake3&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the fourth one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); //Question 2 onEvent(&quot;true&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;true&quot;, &quot;false&quot;, &quot;3&quot;); setScreen(&quot;Question3&quot;); }); onEvent(&quot;false&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;false&quot;, &quot;false&quot;, &quot;3&quot;); setScreen(&quot;Question3&quot;); }); //Question 3 onEvent(&quot;submit&quot;, &quot;click&quot;, function( ) { checkGuess(getText(&quot;text_input1&quot;), &quot;357&quot;, &quot;Mini Game!&quot;); setScreen(&quot;MiniGame&quot;); miniGame(); }); //Mini Game!!! var diamondMoveCooldown1 = 0; var diamondMoveCooldown2 = 0; var diamondMoveCooldown3 = 0; var points = 0; function updateDiamond(diamond, cooldown) { if(cooldown&gt;30) { setPosition(diamond, getXPosition(diamond), getYPosition(diamond)+1); cooldown=0; } if(getYPosition(diamond)&gt;500) { setPosition(diamond, Math.random()*260, -120); score--; setText(&quot;score5&quot;, &quot;Lives: &quot; + score); } cooldown++; return cooldown; } function updatePoints(diamond) { setPosition(diamond, Math.random()*300+20, -120); points++; setText(&quot;thanksForPlaying&quot;, &quot;Thanks for playing! You clicked the diamonds &quot; + (points + &quot; time(s)!&quot;)); } //Check for clicks onEvent(&quot;diamond1&quot;, &quot;click&quot;, function( ) { updatePoints(&quot;diamond1&quot;); }); onEvent(&quot;diamond2&quot;, &quot;click&quot;, function( ) { updatePoints(&quot;diamond2&quot;); }); onEvent(&quot;diamond3&quot;, &quot;click&quot;, function( ) { updatePoints(&quot;diamond3&quot;); }); function miniGame() { while (score&gt;0) { //Update diamonds diamondMoveCooldown1 = updateDiamond(&quot;diamond1&quot;, diamondMoveCooldown1); diamondMoveCooldown2 = updateDiamond(&quot;diamond2&quot;, diamondMoveCooldown2); diamondMoveCooldown3 = updateDiamond(&quot;diamond3&quot;, diamondMoveCooldown3); } setScreen(&quot;End&quot;); } .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week4/applab/2022/09/09/AppLab1.html",
            "relUrl": "/week4/applab/2022/09/09/AppLab1.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Vocabulary Game",
            "content": "from random import randint #Variables score = 0 playing = True #Define a list of possible words and definitions wordDict = { 0: &quot;Argument&quot;, 1: &quot;List&quot;, 2: &quot;Index&quot;, 3: &quot;Block&quot;, 4: &quot;Break&quot;, 5: &quot;Class&quot;, 6: &quot;Bug&quot;, 7: &quot;Code&quot;, 8: &quot;Python&quot;, 9: &quot;Def&quot;, 10: &quot;Dictionary&quot; } defDict = { 0: &quot;A value that is passed between programs, subroutines or functions&quot;, 1: &quot;Used to hold multiple values under linear indexes&quot;, 2: &quot;Where a value is in a list/array&quot;, 3: &quot;Structure of source code which is grouped together&quot;, 4: &quot;Used to stop a loop&quot;, 5: &quot;Template definition of the methods and variables in a particular kind of object&quot;, 6: &quot;A mistake in a program&quot;, 7: &quot;Program instructions&quot;, 8: &quot;Coding language that this is written in&quot;, 9: &quot;Used to define a method&quot;, 10: &quot;Used to hold multiple values under nonlinear indexes&quot; } while playing: index = randint(0, 10) print(&quot;Which word matches this definition or example: n&quot; + defDict.get(index)) guess = input() if(guess == wordDict.get(index)): score+=1 print(&quot;Correct! Score: &quot; + str(score)) else: print(&quot;Incorrect! The correct answer was &quot; + wordDict.get(index) + &quot;, Final score: &quot; + str(score)) playing = False . Which word matches this definition or example: Template definition of the methods and variables in a particular kind of object Correct! Score: 1 Which word matches this definition or example: Used to hold multiple values under nonlinear indexes Correct! Score: 2 Which word matches this definition or example: Template definition of the methods and variables in a particular kind of object Incorrect! The correct answer was Class, Final score: 2 .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week3/ipynb/2022/09/05/vocabGame.html",
            "relUrl": "/week3/ipynb/2022/09/05/vocabGame.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Adding a custom theme",
            "content": "As a test, I added the midnight theme. The largest problem I noticed is that it removed the top bar with my _pages. Overall, this theme actually did not cause a lot of damage when compared to those which some of my peers chose, but it is still not usable due to the one major problem .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week3/ipynb/2022/09/01/Blog5.html",
            "relUrl": "/week3/ipynb/2022/09/01/Blog5.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Loops, Lists and Dictionaries",
            "content": "def makeCraftingGrid(name, A1, A2, A3, B1, B2, B3, C1, C2, C3): grid = [name, A1, A2, A3, B1, B2, B3, C1, C2, C3] return grid #Define Some Recipes pickaxe = makeCraftingGrid(&quot;pickaxe&quot;, &quot;wood&quot;, &quot;wood&quot;, &quot;wood&quot;, &quot; &quot;, &quot;stick&quot;, &quot; &quot;, &quot; &quot;, &quot;stick&quot;, &quot; &quot;) sword = makeCraftingGrid(&quot;sword&quot;, &quot; &quot;, &quot;wood&quot;, &quot; &quot;, &quot; &quot;, &quot;wood&quot;, &quot; &quot;, &quot; &quot;, &quot;stick&quot;, &quot; &quot;) craftingTable = makeCraftingGrid(&quot;crafting table&quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot;Wood&quot;, &quot;Wood&quot;, &quot; &quot;, &quot;Wood&quot;, &quot;Wood&quot;) #This method returns a string for I can print the arrays in a nicer fashion more reminiscent of the game def printCraftingGrid(grid): gridString = &quot;Recipe for a &quot; + grid[0] + &quot;: n&quot; + grid[1] + &quot; &quot; + grid[2] + &quot; &quot; + grid[3] + &quot; n&quot; + grid[4] + &quot; &quot; + grid[5] + &quot; &quot; + grid[6] + &quot; n&quot; + grid[7] + &quot; &quot; + grid[8] + &quot; &quot; + grid[9] return gridString #Define a dict of the recipe gridStrings recipeDict = { &quot;pickaxe&quot;: printCraftingGrid(pickaxe), &quot;sword&quot;: printCraftingGrid(sword), &quot;crafting table&quot;: printCraftingGrid(craftingTable) } #Loop until told to stop run = True while(run): print(&quot;What recipe do you want to see? Type stop to stop the program. All lowercase please.&quot;) recipeInput = input() if(recipeInput != &quot;stop&quot;): print(recipeDict.get(recipeInput)) else: print(&quot;Stopping program...&quot;) run = False . What recipe do you want to see? Type stop to stop the program. All lowercase please. Recipe for a sword: wood wood stick What recipe do you want to see? Type stop to stop the program. All lowercase please. Recipe for a pickaxe: wood wood wood stick stick What recipe do you want to see? Type stop to stop the program. All lowercase please. Recipe for a crafting table: Wood Wood Wood Wood What recipe do you want to see? Type stop to stop the program. All lowercase please. Stopping program... . Applying this to store other personal data and loop through it . dataDict = { &quot;First Name&quot;:&quot;Colin&quot;, &quot;Last Name&quot;:&quot;Weis&quot;, &quot;Name of Dog&quot;:&quot;Ollie&quot;, &quot;Favorite Restaurant&quot;:&quot;Rubios&quot;, &quot;School&quot;:&quot;DNHS&quot;, &quot;City of Residence&quot;:&quot;San Diego&quot;, } for key in dataDict: print(key + &quot;: &quot; + dataDict[key]) . First Name: Colin Last Name: Weis Name of Dog: Ollie Favorite Restaurant: Rubios School: DNHS City of Residence: San Diego .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/python/week3/ipynb/2022/08/30/Blog4.html",
            "relUrl": "/python/week3/ipynb/2022/08/30/Blog4.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Apcsp Notes For Alumni Panel",
            "content": "APCSP Notes for Alumni Panel . Colin . Took CSP twice . Says you have to keep a positive attitude . Anthony . Went from CSA to CSP . Andrew . Took intro to CS, then CSA . Transferring to UCSD (hopefully) . Mabel . Going to UCSD . Took 2 trimesters . Alicen . Going to UCLA for congativitve science computing . Dtya . Computer Science major . How did you realize what you wanted to do and how did this class help with that? . Look outside your classmates . Taking the intro class hooks you/ you like it (2x) . Didn’t originally like the class but doing knows it’s important for aerospace . COGSIN major (psychology+CS); CS gave the technical background for it . Always interested in CS from a young age, took it more seriously in middle and high school and APCSP helped with that . What is the biggest challenge you’ve faced? . Getting started; remember there is a solution on the internet(2x) . Clashing egos; CS egos are not the kindest people . Theory behind CS; in college it is not structured the same . Finding motivation; someone will always be better . Temptation to cut corners, not everything is a checkbox for points . Starting in a new area of CS . Are there any project based learning scenarios in college CS classes . You do only 2; in your freshman and senior years . PBL then tests; split between . Not as much in class but you can work in smaller groups . Dealing with other people is hard . Have you applied CS in your major if you are not majoring in CS . You can write scripts to automate some stuff and will serve you well (2x) . Advanced calculations . 3D printing . Advanced calculations and math calculations . Jupyter notebooks can be used for technical papers . Stats majors and psychology need CS . For existing college students, have you had a job with a school or professor . Be different for references . You can be a bus driver . Code Ninjas . Northrop Grumman; technical drawing revisions visualizing flight data and cybersecurity, scripting for staffing spreadsheet (x3) . LG; APIs, internal APIs, html, python . APCSA got them the internship . Church group . Did you ever focus on personal projects alongside school . Yes, important to get a job, have 2-3 . Visual projects are great . Pathfinding algorithms . Graph theory . How do you use CS in mechanical engineering . Isolate and cut out extra text thats attached to models . Manipulation of commands . Did you do any Del Norte Computer science clubs . Robotics . Tips to get into a internship . Companies will higher in september or november the year before . Projects and clubs; there are a lot of people in stem . Referrals are very helpful . What prior experience do code ninjas need . Good with kids . Takeaway . Computer science is important to a lot of majors and can be useful in many ways like automating tasks and advanced math. There are a variety of ways you can realize that you want to major in computer science. Internships are good and to get one you should try and get referrals .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/2022/08/29/APCSP-Notes-for-Alumni-Panel.html",
            "relUrl": "/2022/08/29/APCSP-Notes-for-Alumni-Panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Spanish Notes",
            "content": "Spanish Notes for 4 videos we watched in class . Video #1 . Stem-changes are verbs that change the letters in the word when conjugated in the “boot” . The boot is the 1st, 2nd, 3rd, and 6th, boxes . | . | It could be: . E - IE . | E - I . | O - UE . | U - UE . | . | To do a stem change just swap the left for the right . | In a textbook, it would say Jugar(UE) because it’s a UE stem change . | Change the one on the left if there is multiple . | . | Video #2 . Querer(To want): . Quiero . | Queries . | Quiere . | Queremos . | Quieren . | . | The e in the middle changes to an ie in the boot boxes . | Ar . Cerrar . | Comenzar . | Pensar . | . | Er . Entender . | Perder . | . | Ir . Prefeirir . | Mentir . | . | Pepe always thinks about Marisol . Pepe siempre piensa en Marisol . | . | La banda empieza a tocar a las 9 . The band starts playing at 9:00 . | . | . | Video #3 . Ar . Almorzar . | Contar . | Costar . | Encontrar . | Mostrar . | Recordar . | . | Er . Devover . | Oler . | Volver . | . | Ir . Dormir . | Morir . | . | Rosa y Flor siempre vuelven tarde . | The train returns at 7:00 . El tren vuelve a las siete . | . | Janet never returns things . | Janet jamás devuelve las cosas . | . | Video #4 . Common verbs that go from e - i . Conseguir . | Oedir . | Repetir . | Seguir . | Servir . | . | Yo repetir . Repito . | I repeat . | . | Usted servir . Usted sirve . | You (Formal) Serve . | . | A los gatos y a los perros les fascina la luz del láser y por eso la siguen . The laser’s light is fascinating to cats and dogs and that’s why they follow it . | . | . | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/2022/08/28/Spanish-Notes.html",
            "relUrl": "/2022/08/28/Spanish-Notes.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "PE Calendar",
            "content": "print(&quot;What day is it? Please don&#39;t use caps&quot;) dayOfTheWeek = input() #Answer accordingly if(dayOfTheWeek == &quot;monday&quot; or dayOfTheWeek == &quot;wednesday&quot;): print(&quot;In PE today, you have kickball&quot;) else: if(dayOfTheWeek == &quot;tuesday&quot;): print(&quot;In PE today, you have a run and classroom time&quot;) else: if(dayOfTheWeek == &quot;thursday&quot;): print(&quot;In PE today, you have a run and kickball&quot;) else: if(dayOfTheWeek == &quot;friday&quot;): print(&quot;In PE today, you have the weight room&quot;) else: if(dayOfTheWeek == &quot;saturday&quot; or dayOfTheWeek == &quot;sunday&quot;): print(&quot;It&#39;s the weekend silly&quot;) else: print(&quot;That&#39;s not a day of the week. If you think it is, make sure there are no caps and check your spelling&quot;) . What day is it? Please don&#39;t use caps In PE today, you have kickball .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/python/week2/ipynb/notes/pe/2022/08/27/PE-Calender.html",
            "relUrl": "/python/week2/ipynb/notes/pe/2022/08/27/PE-Calender.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "A quiz using python",
            "content": "print(&quot;Enjoy this awesome dog themed quiz! Please answer in all lowercase and don&#39;t type out numbers (e.x: Instead of six, 6)&quot;) #Define lists of questions, answers and point values questions = [&quot;Practice Question: What color is a golden retriever?)&quot;, &quot;Do dogs sweat?&quot;, &quot;(True or false) Some dogs have such a good sense of smell they can smell some medical conditions&quot;, &quot;Dogs have the same intelligence as a __ year old human&quot;, &quot;(True or false) Do dogs have super sensitive ears?&quot;, &quot;How many muscles do dogs have in their ears?&quot;] answers = [&quot;gold&quot;, &quot;no&quot;, &quot;true&quot;, &quot;2&quot;, &quot;true&quot;, &quot;18&quot;] pointValues = [0, 1, 1, 2, 3, 5] #Set some variables indexCounter = 0 points = 0 #Loop through all questions for question in questions: print(&quot;For &quot;, pointValues[indexCounter], &quot; point(s): &quot; + question) guess = str(input()) #If guess is correct, tell the user and give a point, otherwise tell the user the correct answer if(guess == answers[indexCounter]): points+=pointValues[indexCounter] print(&quot;Correct! You guessed &quot; + guess + &quot; for &quot; + str(pointValues[indexCounter]) + &quot; point(s), and that is correct! You now have &quot; + str(points) + &quot; point(s)&quot;) else: print(&quot;Incorrect. You guessed &quot; + guess + &quot; for &quot; + str(pointValues[indexCounter]) + &quot; point(s), but the correct answer was &quot; + answers[indexCounter] + &quot;. You still have &quot; + str(points) + &quot; point(s)&quot;) indexCounter+=1 print(&quot;Thanks for playing my quiz! You got &quot; + str(points) + &quot; point(s)&quot;) . Enjoy this awesome dog themed quiz! Please answer in all lowercase and don&#39;t type out numbers (e.x: Instead of six, 6) For 0 point(s): Practice Question: What color is a golden retriever?) Correct! You guessed gold for 0 point(s), and that is correct! You now have 0 point(s) For 1 point(s): Do dogs sweat? Incorrect. You guessed yes for 1 point(s), but the correct answer was no. You still have 0 point(s) For 1 point(s): (True or false) Some dogs have such a good sense of smell they can smell some medical conditions Incorrect. You guessed false for 1 point(s), but the correct answer was true. You still have 0 point(s) For 2 point(s): Dogs have the same intelligence as a __ year old human Correct! You guessed 2 for 2 point(s), and that is correct! You now have 2 point(s) For 3 point(s): (True or false) Do dogs have super sensitive ears? Incorrect. You guessed yes for 3 point(s), but the correct answer was true. You still have 2 point(s) For 5 point(s): How many muscles do dogs have in their ears? Incorrect. You guessed 9 for 5 point(s), but the correct answer was 18. You still have 2 point(s) Thanks for playing my quiz! You got 2 point(s) . This is my dog Ollie: .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/python/week2/ipynb/2022/08/26/Blog3.html",
            "relUrl": "/python/week2/ipynb/2022/08/26/Blog3.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Using Bash!",
            "content": "#Define Anaconda&#39;s location anaconda=$HOME/opt/anaconda3/Anaconda-Navigator.app #Check if it&#39;s installed cd if [ ! -d $anaconda ] then echo &quot;Sadly, you do not have anaconda installed, or it is in the wrong location :(&quot; fi echo &quot;You have anaconda! :)&quot; . You have anaconda! :) . Using bash to help organize your computer with some helpful school folders . school=$HOME/school cd if [ ! -d $school ] then echo &quot;Directory $school does not exist, making directory $school&quot; mkdir -p $school fi echo &quot;Directory $school exists&quot; #Define and make subfolders #Define them all cs=$HOME/school/computer_science math=$HOME/school/math chem=$HOME/school/chemistry ss=$HOME/school/social_studies spanish=$HOME/school/spanish #Make cs if [ ! -d $cs ] then echo &quot;Directory $cs does not exist, making directory $cs&quot; mkdir -p $cs fi echo &quot;Directory $cs exists&quot; #Make math if [ ! -d $math ] then echo &quot;Directory $cs does not exist, making directory $math&quot; mkdir -p $math fi echo &quot;Directory $math exists&quot; #Make chem if [ ! -d $chem ] then echo &quot;Directory $chem does not exist, making directory $chem&quot; mkdir -p $chem fi echo &quot;Directory $chem exists&quot; #Make ss if [ ! -d $ss ] then echo &quot;Directory $ss does not exist, making directory $ss&quot; mkdir -p $ss fi echo &quot;Directory $ss exists&quot; #Make spanish if [ ! -d $spanish ] then echo &quot;Directory $spanish does not exist, making directory $spanish&quot; mkdir -p $spanish fi echo &quot;Directory $spanish exists&quot; . Directory /Users/colin/school does not exist, making directory /Users/colin/school Directory /Users/colin/school exists Directory /Users/colin/school/computer_science does not exist, making directory /Users/colin/school/computer_science Directory /Users/colin/school/computer_science exists Directory /Users/colin/school/computer_science does not exist, making directory /Users/colin/school/math Directory /Users/colin/school/math exists Directory /Users/colin/school/chemistry does not exist, making directory /Users/colin/school/chemistry Directory /Users/colin/school/chemistry exists Directory /Users/colin/school/social_studies does not exist, making directory /Users/colin/school/social_studies Directory /Users/colin/school/social_studies exists Directory /Users/colin/school/spanish does not exist, making directory /Users/colin/school/spanish Directory /Users/colin/school/spanish exists . Heres the folder the above code created on my pc: .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/bash/week2/ipynb/2022/08/25/Blog2.html",
            "relUrl": "/bash/week2/ipynb/2022/08/25/Blog2.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Spanish conjugations",
            "content": "Conjugation page for Spanish class . Instructions for how to Conjugate AR, ER, and IR verbs .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/markdown/week2/spanish/notes/2022/08/22/Spanish-Conjugations.html",
            "relUrl": "/markdown/week2/spanish/notes/2022/08/22/Spanish-Conjugations.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "This is my first time using markdown!",
            "content": "This is my first time using markdown! . This is a markdown change to verify that my VsCode is synced with my github. (Which it is because you are seeing this) .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/markdown/week1/2022/08/22/Markdown.html",
            "relUrl": "/markdown/week1/2022/08/22/Markdown.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Python using Jupyter Notebooks",
            "content": "print(&quot;Hello World&quot;) . Hello World . Calculator for how many mcflurrys you can afford: . print(&quot;How much money do you have? (Numbers only please)&quot;) wallet = float(input()) priceOfMcflurry = 2.39 amountOfMcflurrys = wallet/priceOfMcflurry print(&quot;You have $&quot; + str(wallet) + &quot; and each mcflurry costs $&quot; + str(priceOfMcflurry) + &quot;, so you can afford &quot; + str(amountOfMcflurrys) + &quot; mcflurrys!&quot;) . How much money do you have? (Numbers only please) You have $7.17 and each mcflurry costs $2.39, so you can afford 3.0 mcflurrys! .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/python/week1/ipynb/2022/08/22/Blog1.html",
            "relUrl": "/python/week1/ipynb/2022/08/22/Blog1.html",
            "date": " • Aug 22, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "This is a blog for APCSP made by Colin Weis (BobTheFarmer) .",
          "url": "https://bobthefarmer.github.io/Colin-Blog2/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Vocab",
          "content": "Vocab . A collection of vocabulary from throughout the trimester . Basic Terms . Variable: A value that changes based off of conditions . File Types . .html: Used for designing webpages .md: Also used for basic webpage design and can be used with python .ipynb: Uses a combination of python and .md .",
          "url": "https://bobthefarmer.github.io/Colin-Blog2/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  

  

  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://bobthefarmer.github.io/Colin-Blog2/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}