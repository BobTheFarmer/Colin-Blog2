{
  
    
        "post0": {
            "title": "Week by week peer teaching summary",
            "content": "Week 1 . Summary . This week, we mostly reviewed previous concepts like data abstraction. It was helpful review these concepts however, and I think going over these ideas again helped me remember what we learned last tri. The concepts that where the most helpful to review for me where data abstraction and sequences. It&#39;s easy to forget specific vocabulary and college board lessons, but a large scale lesson of each was easier to remember. Overall this week was mostly review but it was helpful because I forgot some stuff from tri 1. . Scores . Group Score . WiStem | 1/1 | . Tri2Group | 0.9/1 | . Total | 1.9/2 | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/ipynb/2022/12/04/peerLessons1.html",
            "relUrl": "/ipynb/2022/12/04/peerLessons1.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Hacks HW 4; My name is Colin Weis",
            "content": "Test . . Reverse the list . values = [1, 2, 3, 4, 5]; newValues = []; //For the length of the list count = 4; values.forEach(value =&gt; { newValues += values[count]; count-=1; }); values = newValues; console.log(values); . 54321 . Sorting . sorted = false; values = [9, 8, 4, 3, 5]; //Put the set into a holder function ValuesHolder(values) { this.values = values; } valuesHolder = new ValuesHolder(values); //Displays the values function getDisplayValues() { stringOfValues = &quot;&quot;; //Count down from ten for(let i = 5; i &gt;= 0; i--) { //For every value in values check if it is equal to or more than current i to determine box color values.forEach(value =&gt; { if(value&gt;=i) { stringOfValues+=&quot;🟦&quot; } else { stringOfValues+=&quot;⬛&quot; } }); stringOfValues+=&quot; n&quot; } return(stringOfValues); } step = 0; console.log(&quot;Lets sort this random array using bubble sort!&quot;); while(sorted == false) { //Update log console.log(&quot;Step &quot; + step + &quot;: n&quot; + getDisplayValues()); step+=1; //See if the list is sorted using fail fail = false; //Go through all pairs in values for(let i = 0; i&lt;10; i++) { if(values[i]&lt;values[i+1]) { fail = true; //If fail, switch them var temp = values[i]; values[i] = values[i+1]; values[i+1] = temp; } } //Determine if done or not if(fail == false) { console.log(&quot;The array has been sorted! :)&quot;) sorted = true; } } . Lets sort this random array using bubble sort! Step 0: 🟦🟦⬛⬛🟦 🟦🟦🟦⬛🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 Step 1: 🟦🟦⬛🟦⬛ 🟦🟦🟦🟦⬛ 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 Step 2: 🟦🟦🟦⬛⬛ 🟦🟦🟦🟦⬛ 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦 The array has been sorted! :) . true .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/ipynb/2022/12/04/Hacks4.html",
            "relUrl": "/ipynb/2022/12/04/Hacks4.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Homework Assignment for 3.3-4",
            "content": "3.3 Video 1 Hacks . Show two examples and label which one is sequence, selection, iteration . numbers = [0,1,2,3,4,5,6,7,8,9,10] # Sequencing evens = [] # Sequencing for i in numbers: #Iteration + Sequencing if (numbers[i] % 2 == 0): #Selection + Sequencing evens.append(numbers[i]) #Selection + Sequencing print(evens) # Sequencing . [0, 2, 4, 6, 8, 10] . numbers = [0,1,2,3,4,5,6,7,8,9,10] # Sequencing odds = [] # Sequencing for i in numbers: #Iteration + Sequencing if (numbers[i] % 2 != 0): #Selection + Sequencing odds.append(numbers[i]) #Selection + Sequencing print(evens) # Sequencing . [0, 2, 4, 6, 8, 10] . Answers 1 . All the steps combined are sequencing . The step &quot;for i in numbers:&quot; is iteration because they go through all the numbers. . &quot;if (numbers[i] % 2 == 0)&quot; is selection because they sort each number to find the even ones. . i = 1 starString = &quot;*&quot; while i &lt;= 5: j = 1 while j &lt;= i: print (&quot;*&quot;, end= &quot;&quot;) j += 1 print () i += 1 . * ** *** **** ***** . Answers 2 . All the steps are a sequence . &quot;While i &lt;= 5:&quot; is iteration because they repeat until i reaches 5 . &quot;While j &lt;= i:&quot; is selection because this is where they decide what j is . 3.3 Video 2 Hacks . Practice Problems . given the following code segment below: | a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d . a = 1, b = 7, c = 3, d = 7 . consider the following code segment: | hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | The answer is 1 . Make TWO of your own code segments that contain at least 5 defined variables, then provide the answer and EXPLAIN why your answer is correct. | dogs ⟵ false . cats ⟵ true . parrots ⟵ dogs . dogs ⟵ cats . cats ⟵ parrots . dogs: true | cats: false | parrots: false Dogs is true because it is set to cats, and cats at that time was true. Parrots is false because it is set to dogs, before dogs was set to cats, making it false. Cats is also false because it is set to parrots, which is false, at the very end. | . numPups = 0 numCats = 40 numParrots = 10 . numCats ⟵ numParrots/10 numParrots ⟵ numCats/10 numPups ⟵ numCats+numParrots numCats ⟵ numParrots/numCats numParrots ⟵ numCats+numPups . numPups: 5 | numCats: 5 | numParrots: 10 numPups is equal to 5, because it is equal 40/10+10/10, or 5. numCats is 5 because 5/1 = 5 as well. numParrots is set to 5+5 at the very end, making it 10. | . Sequencing | num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 # num2 is now the new num1 + num3 . What is the value of num1 and num2? . num1 = 6, num2 = 11 . 3.3 Video 3 Hacks . 3.4 Video 1 Hacks . String Homework . Test 1 . firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, &quot;@gmail.com&quot;) DISPLAY(email) . | What would the result be? . Hint: var = &quot;B&quot; name = &quot;SmithB&quot; ## Test 1: &quot;SmithB(At symbol it does not work)gmail.com&quot; . | . . Test 2 . word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . | . . Test 2: &quot;ompuook&quot; .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/2022/11/29/Hacks.html",
            "relUrl": "/2022/11/29/Hacks.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Binary Math 3",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Bits Used Minus . +1 | 00000000 | 0 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/3.b/3.c/c4.4/2022/11/17/PBL-binary3.html",
            "relUrl": "/3.b/3.c/c4.4/2022/11/17/PBL-binary3.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Binary Math 2",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal RGB Minus . +1 | 00000000 | 0 | 0 | 0 | | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | | | | | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/3.b/3.c/c4.4/2022/11/17/PBL-binary2.html",
            "relUrl": "/3.b/3.c/c4.4/2022/11/17/PBL-binary2.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/3.b/3.c/c4.4/2022/11/17/PBL-binary.html",
            "relUrl": "/3.b/3.c/c4.4/2022/11/17/PBL-binary.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "N@TM and CB final!",
            "content": "What is N@TM, the CB final, and this blog? . N@TM stands for N@TM, and is an event hosted by Del Norte, where you can view art from all sorts of classes. In this blog I will go over some of the art and projects I saw from different classes during my visit, organized by class. I will also go over my new inspiration. Finally, I will blog about the AP exam and what need to change in the future. . N@TM . 3D Animation . 3D Animation is a very cool class and I liked looking at the art. It was interesting because of the variety 3D animation allows. There were all sorts of art, like: . Realism | Abstract | A mix between both It was also cool because it is another class that deals with computers | . Visual Arts . Visual arts was the class I spent the longest in excluding computers science. The art was very impressive and I enjoyed this section a lot. This art inspired me to be more thoghtful in my work for this class. . Computer Science . The various computer science projects that other groups made were very cool and impressive. One of my favorite projects was Code hoots. It had random computer science questions that the user got to answer. The project was very polished, you could even make an account and the buttons had custom animations. This project in particular inspires me to be more careful with my projects in the future. . Images . . College board final corrections . I got a 41/50 on this test. Here is what I did wrong and should change next time: . Missed questions . Feedback from CB on each missed question . Question #5 . Information about which restaurants Brandon and Cynthia have visited in the past is not needed. Restaurants are recommended based on whether they can accommodate all allergies and dietary restrictions, not based on whether group members have been there before. . Question #16 . Messages are broken into as many packets as are needed to transmit the data. Each packet contains both data and metadata. . Question #18 . The Internet is not a data stream. . Question #22 . Binary 0110 is equivalent to 2^2+21. . Question #24 . Binary 1101 is equivalent to decimal 13 and should be placed after decimal 12. . Question #35 . This code segment assigns maxPS the value 50 when time &gt; 120 and assigns maxPS the value 30 otherwise. . Question #37 . This code segment assigns both variables the original value of num1. . Question #43 . This would be the value of result if the loop iterated one less time. . Question #44 . The remainder when 23 is divided by 4 is 3, so 23 MOD 4 is equal to 3. . Reflection . From this feedback, I think there are three misunderstandings/problems that I have:binary, the internet, and going to fast/not understanding directions.To fix this, I am going to go back to the previous CB videos and re-learn the internet and binary. I am also going to go slower and make sure that I understand the directions on future assignments. Specifically, I got questions 16 and 18 wrong because of my limited understanding of the internet. However, I was able to get some other questions correct about the internet, so it is only specific details which I forgot. For binary, questions 22 and 24 were missed. Again, I need to go back over what I don&#39;t understand in CB. Finally I the rest of the questions I got wrong were because I did not read the directions/code correctly. In the future, I will dedicate more time to reading the directions and get better at comprehending code .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/ipynb/2022/11/03/N@TM.html",
            "relUrl": "/ipynb/2022/11/03/N@TM.html",
            "date": " • Nov 3, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Week7 Summary",
            "content": "Key Idea How I used it . Program Purpose and Function | To learn about getting data using an API | . Data Abstraction | JSON data | . Managing Complexity | There was a lot of embedded dictionaries | . Procedural Abstraction | Decomposing JSON dict | . Algorithm Implementation | Decomposing JSON dict | . Testing | Trial and error | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week7/ipynb/python/2022/10/10/Week7-Summary.html",
            "relUrl": "/week7/ipynb/python/2022/10/10/Week7-Summary.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Sorting Algorithm Using JavaScript",
            "content": "Main Page | Sorting Algorithm Demo | JavaScript Table | Weather API | . . sorted = false; //Make a random set of 15 ints values = []; for(let i = 0; i&lt;10; i++) { values[i] = Math.floor(Math.random()*6); } //Put the set into a holder function ValuesHolder(values) { this.values = values; } valuesHolder = new ValuesHolder(values); //Displays the values function getDisplayValues() { stringOfValues = &quot;&quot;; //Count down from ten for(let i = 5; i &gt;= 0; i--) { //For every value in values check if it is equal to or more than current i to determine box color values.forEach(value =&gt; { if(value&gt;=i) { stringOfValues+=&quot;🟦&quot; } else { stringOfValues+=&quot;⬛&quot; } }); stringOfValues+=&quot; n&quot; } return(stringOfValues); } step = 0; console.log(&quot;Lets sort this random array using bubble sort!&quot;); while(sorted == false) { //Update log console.log(&quot;Step &quot; + step + &quot;: n&quot; + getDisplayValues()); step+=1; //See if the list is sorted using fail fail = false; //Go through all pairs in values for(let i = 0; i&lt;10; i++) { if(values[i]&lt;values[i+1]) { fail = true; //If fail, switch them var temp = values[i]; values[i] = values[i+1]; values[i+1] = temp; } } //Determine if done or not if(fail == false) { console.log(&quot;The array has been sorted! :)&quot;) sorted = true; } } . Lets sort this random array using bubble sort! Step 0: ⬛⬛⬛⬛🟦⬛⬛⬛⬛🟦 ⬛⬛⬛⬛🟦🟦⬛⬛⬛🟦 ⬛🟦⬛⬛🟦🟦⬛⬛🟦🟦 ⬛🟦⬛⬛🟦🟦🟦⬛🟦🟦 ⬛🟦⬛⬛🟦🟦🟦🟦🟦🟦 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 1: ⬛⬛⬛🟦⬛⬛⬛⬛🟦⬛ ⬛⬛⬛🟦🟦⬛⬛⬛🟦⬛ 🟦⬛⬛🟦🟦⬛⬛🟦🟦⬛ 🟦⬛⬛🟦🟦🟦⬛🟦🟦⬛ 🟦⬛⬛🟦🟦🟦🟦🟦🟦⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 2: ⬛⬛🟦⬛⬛⬛⬛🟦⬛⬛ ⬛⬛🟦🟦⬛⬛⬛🟦⬛⬛ 🟦⬛🟦🟦⬛⬛🟦🟦⬛⬛ 🟦⬛🟦🟦🟦⬛🟦🟦⬛⬛ 🟦⬛🟦🟦🟦🟦🟦🟦⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 3: ⬛🟦⬛⬛⬛⬛🟦⬛⬛⬛ ⬛🟦🟦⬛⬛⬛🟦⬛⬛⬛ 🟦🟦🟦⬛⬛🟦🟦⬛⬛⬛ 🟦🟦🟦🟦⬛🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 4: 🟦⬛⬛⬛⬛🟦⬛⬛⬛⬛ 🟦🟦⬛⬛⬛🟦⬛⬛⬛⬛ 🟦🟦🟦⬛🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 5: 🟦⬛⬛⬛🟦⬛⬛⬛⬛⬛ 🟦🟦⬛⬛🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 6: 🟦⬛⬛🟦⬛⬛⬛⬛⬛⬛ 🟦🟦⬛🟦⬛⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 7: 🟦⬛🟦⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 Step 8: 🟦🟦⬛⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦⬛⬛⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦⬛⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦⬛⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦⬛⬛⬛ 🟦🟦🟦🟦🟦🟦🟦🟦🟦🟦 The array has been sorted! :) . true .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/sortingAlgorithm",
            "relUrl": "/sortingAlgorithm",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Using javascript and HTML format for tables",
            "content": "Main Page | Sorting Algorithm Demo | JavaScript Table | Weather API | . . //Define data function Data(name, github, fastpages) { this.name = name; this.git = github; this.fastpages = fastpages; } Data.prototype.setRole = function(role) { this.role = role; } Data.prototype.toJSON = function() { const obj = {name: this.name, github: this.github, fastpages: this.fastpages}; const json = JSON.stringify(obj); return json; } //Make new data and put in a list var colin = new Data(&quot;Colin&quot;, &quot;https://github.com/BobTheFarmer/Colin-Blog2&quot;, &quot;https://bobthefarmer.github.io/Colin-Blog2/&quot;); var orlando = new Data(&quot;Orlando&quot;, &quot;https://github.com/Orlando-c&quot;, &quot;https://orlando-c.github.io/que-pro/&quot;); var ethan = new Data(&quot;Ethan&quot;, &quot;https://github.com/dolphinalt/APCSP-Fastpages&quot;, &quot;https://github.com/dolphinalt/APCSP-Fastpages&quot;) var jaden = new Data(&quot;Jaden&quot;, &quot;https://raisinbran25.github.io/csp2/&quot;, &quot;https://github.com/raisinbran25/csp2&quot;) allData = [colin, orlando, ethan, jaden]; //Make a object to hold the data function DataHolder(allData) { this.allData = allData; } //Use object to hold data dataHolder = new DataHolder(allData); //HTML conversion method DataHolder.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); var table = &quot;&quot;; table += &quot;&lt;tr&gt;&quot;; table += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; table += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; table += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Fastpages&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; table += &quot;&lt;/tr&gt;&quot;; //Go through all data and each data&#39;s properties in a table format for (var row of allData) { table += &quot;&lt;tr&gt;&quot;; table += &quot;&lt;td&gt;&quot; + row.name; table += &quot;&lt;td&gt;&quot; + row.name + &quot;&#39;s Github: &quot; + row.git + &quot;&lt;/td&gt;&quot;; table += &quot;&lt;td&gt;&quot; + row.name + &quot;&#39;s Fastpages: &quot; + row.fastpages + &quot;&lt;/td&gt;&quot;; table += &quot;&lt;tr&gt;&quot; } //Return table return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + table + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(dataHolder._toHtml()); . NameGitHubFastpages . ColinColin&#39;s Github: https://github.com/BobTheFarmer/Colin-Blog2 | Colin&#39;s Fastpages: https://bobthefarmer.github.io/Colin-Blog2/ | OrlandoOrlando&#39;s Github: https://github.com/Orlando-c | Orlando&#39;s Fastpages: https://orlando-c.github.io/que-pro/ | EthanEthan&#39;s Github: https://github.com/dolphinalt/APCSP-Fastpages | Ethan&#39;s Fastpages: https://github.com/dolphinalt/APCSP-Fastpages | JadenJaden&#39;s Github: https://raisinbran25.github.io/csp2/ | Jaden&#39;s Fastpages: https://github.com/raisinbran25/csp2 | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . | . | . | . | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/javascriptTables",
            "relUrl": "/javascriptTables",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Using javascript and HTML format",
            "content": "Main Page | Sorting Algorithm Demo | JavaScript Table | Weather API | . . The above links link to my personal use of JavaScript and the table hacks for JavaScript and HTML format .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/javascript1",
            "relUrl": "/javascript1",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Week5 Summary",
            "content": "Key Idea How I used it . Program Purpose and Function | To be able to locally host our fastpages and group project; improving the speed we can work at | . Data Abstraction | N/A | i | . Managing Complexity | I went back to the week 1 instructions in order to better understand the instillation process | . Procedural Abstraction | N/A | . Algorithm Implementation | Outside algorithms where used in the command log to download things | . Testing | Trial and error | . Mental Health . This week we also learned about the importance of keeping time for things like social connections, gratitude, helping others; and making time for these things and other stress relievers .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week5/ipynb/2022/09/19/Week5-Summary.html",
            "relUrl": "/week5/ipynb/2022/09/19/Week5-Summary.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Minecraft Quiz Using Applab!",
            "content": "Plan: . My plan for this project is to: . 1: Make a basic draft in applab to get an idea for how it works | 2: Then use this blog to blueprint a more advanced and streamlined version of original | 3: Combine the blueprint and parts of the original code to make the final project | . Drafting: . For my draft, I used a basic repeating code structure over and over again to create a basic quiz . . Blueprinting: . To plan my final quiz, I wanted to see what was good and bad about my draft: . Pros Cons . Easy to code | Confusing code; so it would be hard to add more features to | . N/A | Not unique | . To keep the simple code but make it less confusing, for the final product I will add a function that does the repeating code for me | To make the quiz more unique, I will add a game to the end: You will have to click on diamonds as they fall, and the points you get on the quiz will determine how many you can let fall during the game before losing | . Design, Successes, Discoveries and Challenges . Key Idea How I used it . Program Purpose and Function | The purpose and function of my program is to present the user with a quiz they enjoy | . Data Abstraction | One example of data abstraction in my quiz is all of the separate score labels on each page all using the same int variable to control them | . Managing Complexity | I used comments and methods to organize my code in a clear and concise way | . Procedural Abstraction | I added a lot of methods with inputs for they could be used in similar but slightly different ways, like my checkGuess(guess, answer, levelToGoTo) method uses the parameters to be able to check different questions and go to a different page every time | . Algorithm Implementation | Algorithms are used in my program to check multiple questions and to manage multiple button objects representing diamonds | . Testing | I used various console.log statements to be able to find problems | . The Final Product . The final product can be viewed with this link, and the code is below . var score = 0; function checkGuess(guess, answer, levelToGoTo) { //Is the guess correct? Award points and provide feedback accordingly if (guess == answer) { playSpeech((&quot;Correct! You guessed &quot; + guess + &quot;; and that&#39;s the right answser. You are now on level&quot; + levelToGoTo), &quot;female&quot;, &quot;English&quot;); updateAllScores(); } else { playSpeech(((&quot;Incorrect. You guessed &quot; + guess) + &quot;; but the anwser was&quot; + answer + &quot;. You are now on level&quot; + levelToGoTo), &quot;female&quot;, &quot;English&quot;); } } function updateAllScores() { //Update scores; not all are needed ex: start screen as no points could have been awarded score = score + 10; setText(&quot;score3&quot;, &quot;Score: &quot; + score); setText(&quot;score4&quot;, &quot;Score: &quot; + score); setText(&quot;score5&quot;, &quot;Lives: &quot; + score); } //When the start button is clicked, start the game onEvent(&quot;startButton&quot;, &quot;click&quot;, function( ) { playSpeech(&quot;Enjoy this minecraft quiz! Level 1.&quot;, &quot;female&quot;, &quot;English&quot;); setScreen(&quot;Question1&quot;); }); //Questions, using the meathod above: //Question 1 onEvent(&quot;cake&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the second one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); onEvent(&quot;fake1&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the first one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); onEvent(&quot;fake2&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the third one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); onEvent(&quot;fake3&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;the fourth one&quot;, &quot;the second one&quot;, &quot;2&quot;); setScreen(&quot;Question2&quot;); }); //Question 2 onEvent(&quot;true&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;true&quot;, &quot;false&quot;, &quot;3&quot;); setScreen(&quot;Question3&quot;); }); onEvent(&quot;false&quot;, &quot;click&quot;, function( ) { checkGuess(&quot;false&quot;, &quot;false&quot;, &quot;3&quot;); setScreen(&quot;Question3&quot;); }); //Question 3 onEvent(&quot;submit&quot;, &quot;click&quot;, function( ) { checkGuess(getText(&quot;text_input1&quot;), &quot;357&quot;, &quot;Mini Game!&quot;); setScreen(&quot;MiniGame&quot;); miniGame(); }); //Mini Game!!! var diamondMoveCooldown1 = 0; var diamondMoveCooldown2 = 0; var diamondMoveCooldown3 = 0; var points = 0; function updateDiamond(diamond, cooldown) { if(cooldown&gt;30) { setPosition(diamond, getXPosition(diamond), getYPosition(diamond)+1); cooldown=0; } if(getYPosition(diamond)&gt;500) { setPosition(diamond, Math.random()*260, -120); score--; setText(&quot;score5&quot;, &quot;Lives: &quot; + score); } cooldown++; return cooldown; } function updatePoints(diamond) { setPosition(diamond, Math.random()*300+20, -120); points++; setText(&quot;thanksForPlaying&quot;, &quot;Thanks for playing! You clicked the diamonds &quot; + (points + &quot; time(s)!&quot;)); } //Check for clicks onEvent(&quot;diamond1&quot;, &quot;click&quot;, function( ) { updatePoints(&quot;diamond1&quot;); }); onEvent(&quot;diamond2&quot;, &quot;click&quot;, function( ) { updatePoints(&quot;diamond2&quot;); }); onEvent(&quot;diamond3&quot;, &quot;click&quot;, function( ) { updatePoints(&quot;diamond3&quot;); }); function miniGame() { while (score&gt;0) { //Update diamonds diamondMoveCooldown1 = updateDiamond(&quot;diamond1&quot;, diamondMoveCooldown1); diamondMoveCooldown2 = updateDiamond(&quot;diamond2&quot;, diamondMoveCooldown2); diamondMoveCooldown3 = updateDiamond(&quot;diamond3&quot;, diamondMoveCooldown3); } setScreen(&quot;End&quot;); } .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week4/applab/2022/09/09/AppLab1.html",
            "relUrl": "/week4/applab/2022/09/09/AppLab1.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Vocabulary Game",
            "content": "from random import randint #Variables score = 0 playing = True #Define a list of possible words and definitions wordDict = { 0: &quot;Argument&quot;, 1: &quot;List&quot;, 2: &quot;Index&quot;, 3: &quot;Block&quot;, 4: &quot;Break&quot;, 5: &quot;Class&quot;, 6: &quot;Bug&quot;, 7: &quot;Code&quot;, 8: &quot;Python&quot;, 9: &quot;Def&quot;, 10: &quot;Dictionary&quot; } defDict = { 0: &quot;A value that is passed between programs, subroutines or functions&quot;, 1: &quot;Used to hold multiple values under linear indexes&quot;, 2: &quot;Where a value is in a list/array&quot;, 3: &quot;Structure of source code which is grouped together&quot;, 4: &quot;Used to stop a loop&quot;, 5: &quot;Template definition of the methods and variables in a particular kind of object&quot;, 6: &quot;A mistake in a program&quot;, 7: &quot;Program instructions&quot;, 8: &quot;Coding language that this is written in&quot;, 9: &quot;Used to define a method&quot;, 10: &quot;Used to hold multiple values under nonlinear indexes&quot; } while playing: index = randint(0, 10) print(&quot;Which word matches this definition or example: n&quot; + defDict.get(index)) guess = input() if(guess == wordDict.get(index)): score+=1 print(&quot;Correct! Score: &quot; + str(score)) else: print(&quot;Incorrect! The correct answer was &quot; + wordDict.get(index) + &quot;, Final score: &quot; + str(score)) playing = False . Which word matches this definition or example: Template definition of the methods and variables in a particular kind of object Correct! Score: 1 Which word matches this definition or example: Used to hold multiple values under nonlinear indexes Correct! Score: 2 Which word matches this definition or example: Template definition of the methods and variables in a particular kind of object Incorrect! The correct answer was Class, Final score: 2 .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week3/ipynb/2022/09/05/vocabGame.html",
            "relUrl": "/week3/ipynb/2022/09/05/vocabGame.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Adding a custom theme",
            "content": "As a test, I added the midnight theme. The largest problem I noticed is that it removed the top bar with my _pages. Overall, this theme actually did not cause a lot of damage when compared to those which some of my peers chose, but it is still not usable due to the one major problem .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/week3/ipynb/2022/09/01/Blog5.html",
            "relUrl": "/week3/ipynb/2022/09/01/Blog5.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Apcsp Notes For Alumni Panel",
            "content": "APCSP Notes for Alumni Panel . Colin . Took CSP twice . Says you have to keep a positive attitude . Anthony . Went from CSA to CSP . Andrew . Took intro to CS, then CSA . Transferring to UCSD (hopefully) . Mabel . Going to UCSD . Took 2 trimesters . Alicen . Going to UCLA for congativitve science computing . Dtya . Computer Science major . How did you realize what you wanted to do and how did this class help with that? . Look outside your classmates . Taking the intro class hooks you/ you like it (2x) . Didn’t originally like the class but doing knows it’s important for aerospace . COGSIN major (psychology+CS); CS gave the technical background for it . Always interested in CS from a young age, took it more seriously in middle and high school and APCSP helped with that . What is the biggest challenge you’ve faced? . Getting started; remember there is a solution on the internet(2x) . Clashing egos; CS egos are not the kindest people . Theory behind CS; in college it is not structured the same . Finding motivation; someone will always be better . Temptation to cut corners, not everything is a checkbox for points . Starting in a new area of CS . Are there any project based learning scenarios in college CS classes . You do only 2; in your freshman and senior years . PBL then tests; split between . Not as much in class but you can work in smaller groups . Dealing with other people is hard . Have you applied CS in your major if you are not majoring in CS . You can write scripts to automate some stuff and will serve you well (2x) . Advanced calculations . 3D printing . Advanced calculations and math calculations . Jupyter notebooks can be used for technical papers . Stats majors and psychology need CS . For existing college students, have you had a job with a school or professor . Be different for references . You can be a bus driver . Code Ninjas . Northrop Grumman; technical drawing revisions visualizing flight data and cybersecurity, scripting for staffing spreadsheet (x3) . LG; APIs, internal APIs, html, python . APCSA got them the internship . Church group . Did you ever focus on personal projects alongside school . Yes, important to get a job, have 2-3 . Visual projects are great . Pathfinding algorithms . Graph theory . How do you use CS in mechanical engineering . Isolate and cut out extra text thats attached to models . Manipulation of commands . Did you do any Del Norte Computer science clubs . Robotics . Tips to get into a internship . Companies will higher in september or november the year before . Projects and clubs; there are a lot of people in stem . Referrals are very helpful . What prior experience do code ninjas need . Good with kids . Takeaway . Computer science is important to a lot of majors and can be useful in many ways like automating tasks and advanced math. There are a variety of ways you can realize that you want to major in computer science. Internships are good and to get one you should try and get referrals .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/2022/08/29/APCSP-Notes-for-Alumni-Panel.html",
            "relUrl": "/2022/08/29/APCSP-Notes-for-Alumni-Panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Spanish Notes",
            "content": "Spanish Notes for 4 videos we watched in class . Video #1 . Stem-changes are verbs that change the letters in the word when conjugated in the “boot” . The boot is the 1st, 2nd, 3rd, and 6th, boxes . | . | It could be: . E - IE . | E - I . | O - UE . | U - UE . | . | To do a stem change just swap the left for the right . | In a textbook, it would say Jugar(UE) because it’s a UE stem change . | Change the one on the left if there is multiple . | . | Video #2 . Querer(To want): . Quiero . | Queries . | Quiere . | Queremos . | Quieren . | . | The e in the middle changes to an ie in the boot boxes . | Ar . Cerrar . | Comenzar . | Pensar . | . | Er . Entender . | Perder . | . | Ir . Prefeirir . | Mentir . | . | Pepe always thinks about Marisol . Pepe siempre piensa en Marisol . | . | La banda empieza a tocar a las 9 . The band starts playing at 9:00 . | . | . | Video #3 . Ar . Almorzar . | Contar . | Costar . | Encontrar . | Mostrar . | Recordar . | . | Er . Devover . | Oler . | Volver . | . | Ir . Dormir . | Morir . | . | Rosa y Flor siempre vuelven tarde . | The train returns at 7:00 . El tren vuelve a las siete . | . | Janet never returns things . | Janet jamás devuelve las cosas . | . | Video #4 . Common verbs that go from e - i . Conseguir . | Oedir . | Repetir . | Seguir . | Servir . | . | Yo repetir . Repito . | I repeat . | . | Usted servir . Usted sirve . | You (Formal) Serve . | . | A los gatos y a los perros les fascina la luz del láser y por eso la siguen . The laser’s light is fascinating to cats and dogs and that’s why they follow it . | . | . | .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/2022/08/28/Spanish-Notes.html",
            "relUrl": "/2022/08/28/Spanish-Notes.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "PE Calendar",
            "content": "print(&quot;What day is it? Please don&#39;t use caps&quot;) dayOfTheWeek = input() #Answer accordingly if(dayOfTheWeek == &quot;monday&quot; or dayOfTheWeek == &quot;wednesday&quot;): print(&quot;In PE today, you have kickball&quot;) else: if(dayOfTheWeek == &quot;tuesday&quot;): print(&quot;In PE today, you have a run and classroom time&quot;) else: if(dayOfTheWeek == &quot;thursday&quot;): print(&quot;In PE today, you have a run and kickball&quot;) else: if(dayOfTheWeek == &quot;friday&quot;): print(&quot;In PE today, you have the weight room&quot;) else: if(dayOfTheWeek == &quot;saturday&quot; or dayOfTheWeek == &quot;sunday&quot;): print(&quot;It&#39;s the weekend silly&quot;) else: print(&quot;That&#39;s not a day of the week. If you think it is, make sure there are no caps and check your spelling&quot;) . What day is it? Please don&#39;t use caps In PE today, you have kickball .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/python/week2/ipynb/notes/pe/2022/08/27/PE-Calender.html",
            "relUrl": "/python/week2/ipynb/notes/pe/2022/08/27/PE-Calender.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Spanish conjugations",
            "content": "Conjugation page for Spanish class . Instructions for how to Conjugate AR, ER, and IR verbs .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/markdown/week2/spanish/notes/2022/08/22/Spanish-Conjugations.html",
            "relUrl": "/markdown/week2/spanish/notes/2022/08/22/Spanish-Conjugations.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "This is my first time using markdown!",
            "content": "This is my first time using markdown! . This is a markdown change to verify that my VsCode is synced with my github. (Which it is because you are seeing this) .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/markdown/week1/2022/08/22/Markdown.html",
            "relUrl": "/markdown/week1/2022/08/22/Markdown.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Python using Jupyter Notebooks",
            "content": "print(&quot;Hello World&quot;) . Hello World . Calculator for how many mcflurrys you can afford: . print(&quot;How much money do you have? (Numbers only please)&quot;) wallet = float(input()) priceOfMcflurry = 2.39 amountOfMcflurrys = wallet/priceOfMcflurry print(&quot;You have $&quot; + str(wallet) + &quot; and each mcflurry costs $&quot; + str(priceOfMcflurry) + &quot;, so you can afford &quot; + str(amountOfMcflurrys) + &quot; mcflurrys!&quot;) . How much money do you have? (Numbers only please) You have $7.17 and each mcflurry costs $2.39, so you can afford 3.0 mcflurrys! .",
            "url": "https://bobthefarmer.github.io/Colin-Blog2/python/week1/ipynb/2022/08/22/Blog1.html",
            "relUrl": "/python/week1/ipynb/2022/08/22/Blog1.html",
            "date": " • Aug 22, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "This is a blog for APCSP made by Colin Weis (BobTheFarmer) .",
          "url": "https://bobthefarmer.github.io/Colin-Blog2/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Vocab",
          "content": "A collection of vocabulary from throughout the trimester . Basic Terms . Variable: A value that changes based off of conditions . File Types . .html: Used for designing webpages .md: Also used for basic webpage design and can be used with python .ipynb: Uses a combination of python and .md . PBL Vocab . Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. br&gt; DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, managing dependencies (requirements.txt), AWS deployment are some of the key functions that impact velocity. Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. Backend Developer: Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. Sprint: Workflow used for Agile software development .",
          "url": "https://bobthefarmer.github.io/Colin-Blog2/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  

  

  

  

  

  
  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://bobthefarmer.github.io/Colin-Blog2/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}